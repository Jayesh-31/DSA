/* Leet-> 1346. Given an array arr of integers, check if there exists two integers N and M such that N is the double of M ( i.e. N = 2 * M).

More formally check if there exists two indices i and j such that :

    i != j
    0 <= i, j < arr.length
    arr[i] == 2 * arr[j] */

//Binary Search

import java.util.*;                                                    
public class Main
{
	public static void main(String[] args) {
		int[] ar = {1,7,11,14};
		int n = ar.length;
		
		boolean ans = binSer(ar,n);
		System.out.println(ans);
	}
	
	public static boolean binSer(int[] ar,int n){
	    for(int i = 0; i < n; i++){
	        int s = 0, e = n-1,m;
	        int tar = ar[i]*2;
	        
	        while(s<=e){
	            m = s+(e-s)/2;
	            if(ar[m] < tar){
	                s = m+1;
	            }
	            if(ar[m] > tar){
	                e = m-1;
	            }
	            if(ar[m] == tar){
	                return true;
	            }
	        }
	    }
	    return false;
	}
}
